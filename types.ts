import { Timestamp } from 'firebase/firestore';

export type EnglishLevel = 'Beginner' | 'Intermediate' | 'Advanced';

/**
 * Interface for the raw news article data fetched from the backend (Bright Data).
 */
export interface NewsResult {
    title: string;
    snippet: string;
    link: string;
    source: string;
    date: string;
    image?: string;
}

// Re-using NewsResult for consistency in App.tsx
export type Article = NewsResult;

/**
 * Interface for a single vocabulary item generated by Gemini.
 */
export interface VocabularyItem {
    word: string;
    definition: string;
    articleExample: string;
}

/**
 * Interface for the grammar focus section generated by Gemini.
 */
export interface GrammarFocus {
    topic: string;
    explanation: string;
}

/**
 * Interface for the final, structured lesson object generated by Gemini.
 */
export interface Lesson {
    articleTitle: string;
    summary: string; // <-- ADD THIS LINE
    vocabularyList: VocabularyItem[];
    comprehensionQuestions: string[]; // Array of question strings
    grammarFocus: GrammarFocus;
}

// Type for the full lesson response from the backend
export interface LessonResponse {
    success: boolean;
    lesson: Lesson;
    originalArticleUrl: string;
    userId: string;
}

/**
 * Interface for a word saved to the user's Word Bank.
 * It uses the word itself as the ID.
 */
export interface SavedWord extends VocabularyItem {
  id: string; // Will be the same as 'word' for easy lookup/deletion
  createdAt: Timestamp;
  userId: string;
}

/**
 * Represents the possible statuses of a Stripe subscription.
 */
export type StripeSubscriptionStatus =
  | 'active'
  | 'trialing'
  | 'past_due'
  | 'canceled'
  | 'unpaid'
  | 'incomplete'
  | 'incomplete_expired'
  | 'paused';

/**
 * Represents the subscription document created by the Stripe Firebase Extension.
 * Located at: /users/{userId}/subscriptions/{subscriptionId}
 */
export interface StripeSubscription {
  id: string;
  status: StripeSubscriptionStatus;
  // ... (the extension adds many more fields, but status is the key one)
  [key: string]: any;
}